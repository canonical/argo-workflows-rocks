#!/usr/bin/env python3
# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: argoexec
summary: An image for Argo Workflows executor.
description: |
    This image is used as part of the Charmed Kubeflow product. An Argo workflow executor is a process that conforms to a specific interface that allows Argo to perform certain actions like monitoring pod logs, collecting artifacts, managing container lifecycles, etc.
license: Apache-2.0
build-base: ubuntu:22.04
base: bare
version: "v3.3.9_22.04_2" # version format: <KF-upstream-version>_<base-version>_<Charmed-KF-version>
run-user: _daemon_
services:
  argoexec:
    override: replace
    command: argoexec
    startup: enabled
    working-dir: "/bin"
platforms:
    amd64:

parts:
  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && dpkg-query -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query

  base-deps:
    plugin: nil
    stage-packages:
      - base-files
      - netbase
      - tzdata

  base-snaps:
    plugin: nil
    stage-snaps:
      - docker
      - kubectl/1.24/stable
    organize:
      docker: bin/docker
      kubectl: bin/kubectl
    stage:
      - bin/docker
      - bin/kubectl

  builder:
    plugin: make
    after: [base-deps]
    source: https://github.com/argoproj/argo-workflows
    source-type: git
    source-tag: v3.3.9
    build-snaps:
      - go/1.17/stable
    build-packages:
      - git
      - ca-certificates
      - wget
      - curl
      - gcc
      - make
      - mailcap
      - procps
      - tar
      - libcap2-bin
      - libcap2-dev
      - jq
      - zip
    stage-packages:
      - git
      - libcap2
      - jq
      - tar
      - gzip
    override-build: |
      # builder stage https://github.com/argoproj/argo-workflows/blob/v3.3.8/Dockerfile#L36
      go mod download

      # reset LDFLAGS because Go has different format, i.e. '-L' is undefined in Go
      LDFLAGS=""

      # argoexec-build stage https://github.com/argoproj/argo-workflows/blob/v3.3.8/Dockerfile#L82
      cat .dockerignore >> .gitignore
      git status --porcelain | cut -c4- | xargs git update-index --skip-worktree
      make dist/argoexec
      setcap CAP_SYS_PTRACE,CAP_SYS_CHROOT+ei dist/argoexec

      # argoexec stage https://github.com/argoproj/argo-workflows/blob/v3.3.8/Dockerfile#L122
      install -DT "./dist/argoexec" "$CRAFT_PART_INSTALL/bin/argoexec"
      install -DT "/etc/mime.types" "$CRAFT_PART_INSTALL/etc/mime.types"

  copy-files:
    plugin: dump
    after: [builder]
    source: https://github.com/argoproj/argo-workflows
    source-type: git
    source-subdir: hack
    source-tag: v3.3.9
    organize:
      ssh_known_hosts: etc/ssh/ssh_known_hosts
      nsswitch.conf: etc/ssh/nsswitch.conf
    stage:
      - etc/ssh/ssh_known_hosts
      - etc/ssh/nsswitch.conf
